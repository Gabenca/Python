
###############################################################################
#              LABORANALYSIS DOCKERFILE (analyze application)                 #
#          Special thanks to Miguel Grinberg (miguelgrinberg.com)             #
#              for excellent dockerfile commands explanation                  #
###############################################################################
#  This is CONTAINER version, intended for deploying to DOCKER environment!   #
###############################################################################

# Each line in the Dockerfile is a command.
# The 'FROM' command specifies the base container image on which the new image
# will be built. The idea is that you start from an existing image,
# add or change some things, and you end up with a derived image.
# Images are referenced by a name and a tag, separated by a colon.
# The tag is used as a versioning mechanism, allowing a container image
# to provide more than one variant. The name of image is python,
# which is the official Docker image for Python. The tags for this image
# allow you to specify the interpreter version and base operating system.
# The 3.8-slim-buster tag selects a Python 3.8 interpreter
# installed on lightweight version of Debian 10 (Buster) Linux.
FROM compose2_laboranalysis

# Copy our application distro files to container
COPY laboranalysis laboranalysis

# Set new default location
WORKDIR /home/laboranalysis/laboranalysis

# The 'RUN' chown command that follows sets the owner of all the directories
# and files that were stored in /home/laboranalysis as the new
# laboranalysis user. Even though I created this user near the top
# of the Dockerfile, the default user for all the commands remained root,
# so all these files need to be switched to the laboranalysis user
# so that this user can work with them when the container is started.
RUN chown -R laboranalysis:laboranalysis ./

# The 'USER' command in the next line makes this new laboranalysis user the default
# for any subsequent instructions, and also for when the container is started.
USER laboranalysis

# Finally, the 'ENTRYPOINT' command defines the default command
# that should be executed when the container is started.
# This is the command that will start the python interpreter.
ENTRYPOINT ["python"]
# In 'CMD' we provide main application file.
CMD ["analyze.py"]
